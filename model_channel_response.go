/*
notifier

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.3.0
Contact: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ChannelResponse struct for ChannelResponse
type ChannelResponse struct {
	ServiceUsername string `json:"service_username"`
	ServiceId string `json:"service_id"`
}

// NewChannelResponse instantiates a new ChannelResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelResponse(serviceUsername string, serviceId string) *ChannelResponse {
	this := ChannelResponse{}
	this.ServiceUsername = serviceUsername
	this.ServiceId = serviceId
	return &this
}

// NewChannelResponseWithDefaults instantiates a new ChannelResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelResponseWithDefaults() *ChannelResponse {
	this := ChannelResponse{}
	return &this
}

// GetServiceUsername returns the ServiceUsername field value
func (o *ChannelResponse) GetServiceUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceUsername
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value
// and a boolean to check if the value has been set.
func (o *ChannelResponse) GetServiceUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceUsername, true
}

// SetServiceUsername sets field value
func (o *ChannelResponse) SetServiceUsername(v string) {
	o.ServiceUsername = v
}

// GetServiceId returns the ServiceId field value
func (o *ChannelResponse) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ChannelResponse) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ChannelResponse) SetServiceId(v string) {
	o.ServiceId = v
}

func (o ChannelResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["service_username"] = o.ServiceUsername
	}
	if true {
		toSerialize["service_id"] = o.ServiceId
	}
	return json.Marshal(toSerialize)
}

type NullableChannelResponse struct {
	value *ChannelResponse
	isSet bool
}

func (v NullableChannelResponse) Get() *ChannelResponse {
	return v.value
}

func (v *NullableChannelResponse) Set(val *ChannelResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelResponse(val *ChannelResponse) *NullableChannelResponse {
	return &NullableChannelResponse{value: val, isSet: true}
}

func (v NullableChannelResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


